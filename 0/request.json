{"dependencies":[{"id":"dart.core","uri":"dart-sdk/lib/core/core.dart","name":"dart:core","children":[{"id":"Object","comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","children":[{"id":"other","name":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"toString0()","comment":"\nReturns a string representation of this object.\n","name":"toString","line":"48","kind":"method"},{"id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"id":"invocation","name":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","line":"65","kind":"property"},{"id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"},{"id":"base_request","uri":"package:http/src/base_request.dart","name":"package:http/src/base_request.dart","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"BaseRequest","comment":"The base class for HTTP requests.\n\nSubclasses of [BaseRequest] can be constructed manually and passed to\n[BaseClient.send], which allows the user to provide fine-grained control\nover the request properties. However, usually it's easier to use convenience\nmethods like [get] or [BaseClient.get].","name":"BaseRequest","children":[{"isSetter":true,"id":"contentLength=1()","name":"contentLength=","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"value","name":"value","kind":"param"}],"line":"36","kind":"method"},{"isSetter":true,"id":"persistentConnection=1()","name":"persistentConnection=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"value","name":"value","kind":"param"}],"line":"46","kind":"method"},{"isSetter":true,"id":"followRedirects=1()","name":"followRedirects=","children":[{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"value","name":"value","kind":"param"}],"line":"56","kind":"method"},{"isSetter":true,"id":"maxRedirects=1()","name":"maxRedirects=","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"value","name":"value","kind":"param"}],"line":"67","kind":"method"},{"returnType":{"refId":"byte_stream/ByteStream","name":"ByteStream"},"id":"finalize0()","comment":"Finalizes the HTTP request in preparation for it being sent. This freezes\nall mutable fields and returns a single-subscription [ByteStream] that\nemits the body of the request.\n\nThe base implementation of this returns null rather than a [ByteStream];\nsubclasses are responsible for creating the return value, which should be\nsingle-subscription to ensure that no data is dropped. They should also\nfreeze any additional mutable fields they add that don't make sense to\nchange after the request headers are sent.","name":"finalize","line":"95","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"streamed_response/StreamedResponse","name":"StreamedResponse"}],"name":"Future"},"id":"send0()","comment":"Sends this request.\n\nThis automatically initializes a new [Client] and closes that client once\nthe request is complete. If you're planning on making multiple requests to\nthe same server, you should use a single [Client] for all of those\nrequests.","name":"send","line":"108","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"_checkFinalized0()","comment":"Throws an error if this request has been finalized.","name":"_checkFinalized","isPrivate":true,"line":"128","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"toString0()","name":"toString","line":"133","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"contentLength","comment":"The size of the request body, in bytes. This defaults to -1, which\nindicates that the size of the request is not known in advance.","name":"contentLength","line":"33","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"persistentConnection","comment":"Whether a persistent connection should be maintained with the server.\nDefaults to true.","name":"persistentConnection","line":"43","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"followRedirects","comment":"Whether the client should follow redirects while resolving this request.\nDefaults to true.","name":"followRedirects","line":"53","kind":"property"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"maxRedirects","comment":"The maximum number of redirects to follow when [followRedirects] is true.\nIf this number is exceeded the [BaseResponse] future will signal a\n[RedirectException]. Defaults to 5.","name":"maxRedirects","line":"64","kind":"property"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"finalized","comment":"Whether the request has been finalized.","name":"finalized","line":"79","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"id":"method","comment":"The HTTP method of the request. Most commonly \"GET\" or \"POST\", less\ncommonly \"HEAD\", \"PUT\", or \"DELETE\". Non-standard method names are also\nsupported.","name":"method","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/Uri","name":"Uri"},"isFinal":true,"id":"url","comment":"The URL to which the request will be sent.","name":"url","line":"29","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"_contentLength","name":"_contentLength","isPrivate":true,"line":"34","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"_persistentConnection","name":"_persistentConnection","isPrivate":true,"line":"44","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"_followRedirects","name":"_followRedirects","isPrivate":true,"line":"54","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"_maxRedirects","name":"_maxRedirects","isPrivate":true,"line":"65","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isFinal":true,"id":"headers","comment":"The headers for this request.","name":"headers","line":"76","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"_finalized","name":"_finalized","isPrivate":true,"line":"80","kind":"variable"},{"id":"2()","comment":"Creates a new HTTP request.","name":"","children":[{"initializedField":{"refId":"base_request/BaseRequest/method","name":"method"},"ref":{"refId":"dart.core/String","name":"String"},"id":"method","name":"method","kind":"param"},{"initializedField":{"refId":"base_request/BaseRequest/url","name":"url"},"ref":{"refId":"dart.core/Uri","name":"Uri"},"id":"url","name":"url","kind":"param"}],"line":"83","kind":"constructor"}],"line":"22","kind":"class"}],"line":"5","kind":"library"}],"id":"request","uri":"package:http/src/request.dart","name":"package:http/src/request.dart","children":[{"superclass":{"refId":"base_request/BaseRequest","name":"BaseRequest"},"id":"Request","comment":"An HTTP request where the entire request body is known in advance.","name":"Request","children":[{"isSetter":true,"id":"contentLength=1()","name":"contentLength=","children":[{"ref":{"refId":"dart.core/int","name":"int"},"id":"value","name":"value","kind":"param"}],"line":"24","kind":"method"},{"isSetter":true,"id":"encoding=1()","name":"encoding=","children":[{"ref":{"refId":"dart.io/Encoding","name":"Encoding"},"id":"value","name":"value","kind":"param"}],"line":"54","kind":"method"},{"isSetter":true,"id":"bodyBytes=1()","name":"bodyBytes=","children":[{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/int","name":"int"}],"name":"List"},"id":"value","name":"value","kind":"param"}],"line":"75","kind":"method"},{"isSetter":true,"id":"body=1()","name":"body=","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"value","name":"value","kind":"param"}],"line":"89","kind":"method"},{"isSetter":true,"id":"bodyFields=1()","name":"bodyFields=","children":[{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"id":"fields","name":"fields","kind":"param"}],"line":"127","kind":"method"},{"returnType":{"refId":"byte_stream/ByteStream","name":"ByteStream"},"id":"finalize0()","comment":"Freezes all mutable fields and returns a single-subscription [ByteStream]\ncontaining the request body.","name":"finalize","line":"146","kind":"method"},{"isSetter":true,"id":"_contentType=1()","name":"_contentType=","isPrivate":true,"children":[{"ref":{"refId":"dart.io/ContentType","name":"ContentType"},"id":"value","name":"value","kind":"param"}],"line":"159","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"_checkFinalized0()","comment":"Throw an error if this request has been finalized.","name":"_checkFinalized","isPrivate":true,"line":"164","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"contentLength","comment":"The size of the request body, in bytes. This is calculated from\n[bodyBytes].\n\nThe content length cannot be set for [Request], since it's automatically\ncalculated from [bodyBytes].","name":"contentLength","line":"22","kind":"property"},{"ref":{"refId":"dart.io/Encoding","name":"Encoding"},"id":"encoding","comment":"The encoding used for the request. This encoding is used when converting\nbetween [bodyBytes] and [body].\n\nIf the request has a `Content-Type` header and that header has a `charset`\nparameter, that parameter's value is used as the encoding. Otherwise, if\n[encoding] has been set manually, that encoding is used. If that hasn't\nbeen set either, this defaults to [Encoding.UTF_8].\n\nIf the `charset` parameter's value is not a known [Encoding], reading this\nwill throw a [FormatException].\n\nIf the request has a `Content-Type` header, setting this will set the\ncharset parameter on that header.","name":"encoding","line":"47","kind":"property"},{"ref":{"refId":"dart.typed_data/Uint8List","name":"Uint8List"},"id":"bodyBytes","comment":"The bytes comprising the body of the request. This is converted to and\nfrom [body] using [encoding].\n\nThis list should only be set, not be modified in place.","name":"bodyBytes","line":"72","kind":"property"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"body","comment":"The body of the request as a string. This is converted to and from\n[bodyBytes] using [encoding].\n\nWhen this is set, if the request does not yet have a `Content-Type`\nheader, one will be added with the type `text/plain`. Then the `charset`\nparameter of the `Content-Type` header (whether new or pre-existing) will\nbe set to [encoding] if it wasn't already set.","name":"body","line":"87","kind":"property"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"id":"bodyFields","comment":"The form-encoded fields in the body of the request as a map from field\nnames to values. The form-encoded body is converted to and from\n[bodyBytes] using [encoding] (in the same way as [body]).\n\nIf the request doesn't have a `Content-Type` header of\n`application/x-www-form-urlencoded`, reading this will throw a\n[StateError].\n\nIf the request has a `Content-Type` header with a type other than\n`application/x-www-form-urlencoded`, setting this will throw a\n[StateError]. Otherwise, the content type will be set to\n`application/x-www-form-urlencoded`.\n\nThis map should only be set, not modified in place.","name":"bodyFields","line":"117","kind":"property"},{"ref":{"refId":"dart.io/ContentType","name":"ContentType"},"id":"_contentType","comment":"The `Content-Type` header of the request (if it exists) as a\n[ContentType].","name":"_contentType","isPrivate":true,"line":"153","kind":"property"},{"ref":{"refId":"dart.io/Encoding","name":"Encoding"},"id":"_defaultEncoding","comment":"The default encoding to use when converting between [bodyBytes] and\n[body]. This is only used if [encoding] hasn't been manually set and if\nthe content-type header has no encoding information.","name":"_defaultEncoding","isPrivate":true,"line":"32","kind":"variable"},{"ref":{"refId":"dart.typed_data/Uint8List","name":"Uint8List"},"id":"_bodyBytes","name":"_bodyBytes","isPrivate":true,"line":"73","kind":"variable"},{"id":"2()","comment":"Creates a new HTTP request.","name":"","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"method","name":"method","kind":"param"},{"ref":{"refId":"dart.core/Uri","name":"Uri"},"id":"url","name":"url","kind":"param"}],"line":"139","kind":"constructor"}],"line":"16","kind":"class"}],"line":"5","kind":"library"}