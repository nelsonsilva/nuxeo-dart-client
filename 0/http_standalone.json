{"dependencies":[{"id":"client","uri":"package:http/src/client.dart","name":"package:http/src/client.dart","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Client","comment":"The interface for HTTP clients that take care of maintaining persistent\nconnections across multiple requests to the same server. If you only need to\nsend a single request, it's usually easier to use [head], [get], [post],\n[put], or [delete] instead.\n\nWhen creating an HTTP client class with additional functionality, you must\nextend [BaseClient] rather than [Client]. In most cases, you can wrap\nanother instance of [Client] and add functionality on top of that. This\nallows all classes implementing [Client] to be mutually composable.","name":"Client","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"id":"head2()","comment":"Sends an HTTP HEAD request with the given headers to the given URL, which\ncan be a [Uri] or a [String].\n\nFor more fine-grained control over the request, use [send] instead.","name":"head","children":[{"id":"url","name":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"headers","name":"headers","kind":"param"}],"line":"36","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"id":"get2()","comment":"Sends an HTTP GET request with the given headers to the given URL, which\ncan be a [Uri] or a [String].\n\nFor more fine-grained control over the request, use [send] instead.","name":"get","children":[{"id":"url","name":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"headers","name":"headers","kind":"param"}],"line":"42","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"id":"post3()","comment":"Sends an HTTP POST request with the given headers and fields to the given\nURL, which can be a [Uri] or a [String]. If any fields are specified, the\ncontent-type is automatically set to\n`\"application/x-www-form-urlencoded\"`.\n\nFor more fine-grained control over the request, use [send] instead.","name":"post","children":[{"id":"url","name":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"headers","name":"headers","line":"51","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"fields","name":"fields","line":"52","kind":"param"}],"line":"50","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"id":"put3()","comment":"Sends an HTTP PUT request with the given headers and fields to the given\nURL, which can be a [Uri] or a [String]. If any fields are specified, the\ncontent-type is automatically set to\n`\"application/x-www-form-urlencoded\"`.\n\nFor more fine-grained control over the request, use [send] instead.","name":"put","children":[{"id":"url","name":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"headers","name":"headers","line":"61","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"fields","name":"fields","line":"62","kind":"param"}],"line":"60","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"id":"delete2()","comment":"Sends an HTTP DELETE request with the given headers to the given URL,\nwhich can be a [Uri] or a [String].\n\nFor more fine-grained control over the request, use [send] instead.","name":"delete","children":[{"id":"url","name":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"headers","name":"headers","kind":"param"}],"line":"68","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Future"},"id":"read2()","comment":"Sends an HTTP GET request with the given headers to the given URL, which\ncan be a [Uri] or a [String], and returns a Future that completes to the\nbody of the response as a String.\n\nThe Future will emit an [HttpException] if the response doesn't have a\nsuccess status code.\n\nFor more fine-grained control over the request and response, use [send] or\n[get] instead.","name":"read","children":[{"id":"url","name":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"headers","name":"headers","kind":"param"}],"line":"79","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.typed_data/Uint8List","name":"Uint8List"}],"name":"Future"},"id":"readBytes2()","comment":"Sends an HTTP GET request with the given headers to the given URL, which\ncan be a [Uri] or a [String], and returns a Future that completes to the\nbody of the response as a list of bytes.\n\nThe Future will emit an [HttpException] if the response doesn't have a\nsuccess status code.\n\nFor more fine-grained control over the request and response, use [send] or\n[get] instead.","name":"readBytes","children":[{"id":"url","name":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"headers","name":"headers","kind":"param"}],"line":"90","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"streamed_response/StreamedResponse","name":"StreamedResponse"}],"name":"Future"},"id":"send1()","comment":"Sends an HTTP request and asynchronously returns the response.","name":"send","children":[{"ref":{"refId":"base_request/BaseRequest","name":"BaseRequest"},"id":"request","name":"request","kind":"param"}],"line":"93","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"close0()","comment":"Closes the client and cleans up any resources associated with it. It's\nimportant to close each client when it's done being used; failing to do so\ncan cause the Dart process to hang.","name":"close","line":"98","kind":"method"},{"returnType":{"refId":"client/Client","name":"Client"},"id":"0()","comment":"Creates a new Client using the default implementation. This implementation\nuses an underlying `dart:io` [HttpClient] to make requests.","name":"","line":"30","kind":"constructor"}],"line":"27","kind":"class"}],"line":"5","kind":"library"},{"id":"dart.core","uri":"dart-sdk/lib/core/core.dart","name":"dart:core","children":[{"id":"Object","comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","children":[{"id":"other","name":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"id":"toString0()","comment":"\nReturns a string representation of this object.\n","name":"toString","line":"48","kind":"method"},{"id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"id":"invocation","name":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","line":"65","kind":"property"},{"id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"","line":"18","kind":"constructor"}],"line":"10","kind":"class"}],"line":"5","kind":"library"},{"id":"base_client","uri":"package:http/src/base_client.dart","name":"package:http/src/base_client.dart","children":[{"isAbstract":true,"interfaces":[{"refId":"client/Client","name":"Client"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"BaseClient","comment":"The abstract base class for an HTTP client. This is a mixin-style class;\nsubclasses only need to implement [send] and maybe [close], and then they\nget various convenience methods for free.","name":"BaseClient","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"id":"head2()","comment":"Sends an HTTP HEAD request with the given headers to the given URL, which\ncan be a [Uri] or a [String].\n\nFor more fine-grained control over the request, use [send] instead.","name":"head","children":[{"id":"url","name":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"headers","name":"headers","kind":"param"}],"line":"26","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"id":"get2()","comment":"Sends an HTTP GET request with the given headers to the given URL, which\ncan be a [Uri] or a [String].\n\nFor more fine-grained control over the request, use [send] instead.","name":"get","children":[{"id":"url","name":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"headers","name":"headers","kind":"param"}],"line":"33","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"id":"post3()","comment":"Sends an HTTP POST request with the given headers and fields to the given\nURL, which can be a [Uri] or a [String]. If any fields are specified, the\ncontent-type is automatically set to\n`\"application/x-www-form-urlencoded\"`.\n\nFor more fine-grained control over the request, use [send] instead.","name":"post","children":[{"id":"url","name":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"headers","name":"headers","line":"43","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"fields","name":"fields","line":"44","kind":"param"}],"line":"42","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"id":"put3()","comment":"Sends an HTTP PUT request with the given headers and fields to the given\nURL, which can be a [Uri] or a [String]. If any fields are specified, the\ncontent-type is automatically set to\n`\"application/x-www-form-urlencoded\"`.\n\nFor more fine-grained control over the request, use [send] instead.","name":"put","children":[{"id":"url","name":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"headers","name":"headers","line":"54","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"fields","name":"fields","line":"55","kind":"param"}],"line":"53","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"id":"delete2()","comment":"Sends an HTTP DELETE request with the given headers to the given URL,\nwhich can be a [Uri] or a [String].\n\nFor more fine-grained control over the request, use [send] instead.","name":"delete","children":[{"id":"url","name":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"headers","name":"headers","kind":"param"}],"line":"62","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Future"},"id":"read2()","comment":"Sends an HTTP GET request with the given headers to the given URL, which\ncan be a [Uri] or a [String], and returns a Future that completes to the\nbody of the response as a String.\n\nThe Future will emit an [HttpException] if the response doesn't have a\nsuccess status code.\n\nFor more fine-grained control over the request and response, use [send] or\n[get] instead.","name":"read","children":[{"id":"url","name":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"headers","name":"headers","kind":"param"}],"line":"74","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"dart.typed_data/Uint8List","name":"Uint8List"}],"name":"Future"},"id":"readBytes2()","comment":"Sends an HTTP GET request with the given headers to the given URL, which\ncan be a [Uri] or a [String], and returns a Future that completes to the\nbody of the response as a list of bytes.\n\nThe Future will emit an [HttpException] if the response doesn't have a\nsuccess status code.\n\nFor more fine-grained control over the request and response, use [send] or\n[get] instead.","name":"readBytes","children":[{"id":"url","name":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"headers","name":"headers","kind":"param"}],"line":"90","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"streamed_response/StreamedResponse","name":"StreamedResponse"}],"name":"Future"},"id":"send1()","comment":"Sends an HTTP request and asynchronously returns the response.\n\nImplementers should call [BaseRequest.finalize] to get the body of the\nrequest as a [ByteStream]. They shouldn't make any assumptions about the\nstate of the stream; it could have data written to it asynchronously at a\nlater point, or it could already be closed when it's returned.","name":"send","children":[{"ref":{"refId":"base_request/BaseRequest","name":"BaseRequest"},"id":"request","name":"request","kind":"param"}],"line":"103","kind":"method"},{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"response/Response","name":"Response"}],"name":"Future"},"id":"_sendUnstreamed4()","comment":"Sends a non-streaming [Request] and returns a non-streaming [Response].","name":"_sendUnstreamed","isPrivate":true,"children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"method","name":"method","line":"107","kind":"param"},{"id":"url","name":"url","line":"107","kind":"param"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"id":"headers","name":"headers","line":"107","kind":"param"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"isOptional":true,"id":"fields","name":"fields","line":"108","kind":"param"}],"line":"106","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"_checkResponseSuccess2()","comment":"Throws an error if [response] is not successful.","name":"_checkResponseSuccess","isPrivate":true,"children":[{"id":"url","name":"url","kind":"param"},{"ref":{"refId":"response/Response","name":"Response"},"id":"response","name":"response","kind":"param"}],"line":"123","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"close0()","comment":"Closes the client and cleans up any resources associated with it. It's\nimportant to close each client when it's done being used; failing to do so\ncan cause the Dart process to hang.","name":"close","line":"135","kind":"method"}],"line":"21","kind":"class"}],"line":"5","kind":"library"},{"id":"http_client","comment":"\nProvides abstractions for an HTTP client for both client and server side uses.\n","uri":"file:///home/nfgs/Programacao/Dart/nuxeo_dart_automation/lib/http.dart","children":[{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Client","name":"Client","children":[{"returnType":{"refId":"http_client/Request","name":"Request"},"id":"get1()","name":"get","children":[{"ref":{"refId":"dart.core/Uri","name":"Uri"},"id":"uri","name":"uri","kind":"param"}],"line":"57","kind":"method"},{"returnType":{"refId":"http_client/Request","name":"Request"},"id":"post2()","name":"post","children":[{"ref":{"refId":"dart.core/Uri","name":"Uri"},"id":"uri","name":"uri","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","id":"multipart","name":"multipart","kind":"param"}],"line":"58","kind":"method"}],"line":"56","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Request","name":"Request","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"http_client/Response","name":"Response"}],"name":"Future"},"id":"send1()","name":"send","children":[{"isOptional":true,"id":"data","name":"data","kind":"param"}],"line":"53","kind":"method"},{"ref":{"refId":"http_client/RequestHeaders","name":"RequestHeaders"},"id":"headers","name":"headers","line":"51","kind":"property"},{"id":"upload","name":"upload","line":"52","kind":"property"}],"line":"50","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"RequestHeaders","name":"RequestHeaders","children":[{"id":"set2()","name":"set","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"name","name":"name","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"value","name":"value","kind":"param"}],"line":"39","kind":"method"}],"line":"38","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Response","name":"Response","children":[{"id":"body","name":"body","line":"35","kind":"property"}],"line":"34","kind":"class"}],"line":"4","kind":"library"}],"id":"http_standalone","uri":"file:///home/nfgs/Programacao/Dart/nuxeo_dart_automation/lib/http/standalone.dart","children":[{"superclass":{"refId":"base_client/BaseClient","name":"BaseClient"},"id":"HttpClient","name":"HttpClient","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"streamed_response/StreamedResponse","name":"StreamedResponse"}],"name":"Future"},"id":"send1()","comment":"Sends an HTTP request and asynchronously returns the response.","name":"send","children":[{"ref":{"refId":"base_request/BaseRequest","name":"BaseRequest"},"id":"request","name":"request","kind":"param"}],"line":"103","kind":"method"},{"returnType":{"refId":"void","name":"void"},"id":"close0()","comment":"Closes the client. This terminates all active connections. If a client\nremains unclosed, the Dart process may not terminate.","name":"close","line":"135","kind":"method"},{"ref":{"refId":"dart.io/HttpClient","name":"HttpClient"},"id":"_inner","comment":"The underlying `dart:io` HTTP client.","name":"_inner","isPrivate":true,"line":"96","kind":"variable"},{"id":"3()","name":"","children":[{"ref":{"refId":"dart.core/Uri","name":"Uri"},"id":"uri","name":"uri","kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"realm","name":"realm","kind":"param"},{"ref":{"refId":"dart.io/HttpClientBasicCredentials","name":"HttpClientBasicCredentials"},"id":"credentials","name":"credentials","kind":"param"}],"line":"98","kind":"constructor"}],"line":"93","kind":"class"},{"interfaces":[{"refId":"http_client/Client","name":"Client"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Client","name":"Client","children":[{"returnType":{"refId":"http_standalone/Request","name":"Request"},"id":"get1()","name":"get","children":[{"ref":{"refId":"dart.core/Uri","name":"Uri"},"id":"uri","name":"uri","kind":"param"}],"line":"88","kind":"method"},{"returnType":{"refId":"http_standalone/Request","name":"Request"},"id":"post2()","name":"post","children":[{"ref":{"refId":"dart.core/Uri","name":"Uri"},"id":"uri","name":"uri","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","id":"multipart","name":"multipart","kind":"param"}],"line":"89","kind":"method"},{"ref":{"refId":"http_standalone/HttpClient","name":"HttpClient"},"id":"_client","name":"_client","isPrivate":true,"line":"75","kind":"variable"},{"ref":{"refId":"dart.core/Uri","name":"Uri"},"id":"uri","name":"uri","line":"76","kind":"variable"},{"id":"4()","name":"","children":[{"ref":{"refId":"dart.core/String","name":"String"},"id":"url","name":"url","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"id":"username","name":"username","line":"79","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"id":"password","name":"password","line":"80","kind":"param"},{"isNamed":true,"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"id":"realm","name":"realm","line":"81","kind":"param"}],"line":"78","kind":"constructor"}],"line":"73","kind":"class"},{"interfaces":[{"refId":"http_client/Request","name":"Request"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Request","name":"Request","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"http_standalone/Response","name":"Response"}],"name":"Future"},"id":"send1()","name":"send","children":[{"isOptional":true,"id":"data","name":"data","kind":"param"}],"line":"40","kind":"method"},{"id":"upload","name":"upload","line":"37","kind":"property"},{"id":"headers","name":"headers","line":"38","kind":"property"},{"ref":{"refId":"http_standalone/HttpClient","name":"HttpClient"},"id":"_client","name":"_client","isPrivate":true,"line":"25","kind":"variable"},{"ref":{"refId":"base_request/BaseRequest","name":"BaseRequest"},"id":"_request","name":"_request","isPrivate":true,"line":"26","kind":"variable"},{"ref":{"refId":"dart.core/bool","name":"bool"},"id":"multipart","name":"multipart","line":"27","kind":"variable"},{"id":"4()","name":"","children":[{"initializedField":{"refId":"http_standalone/Request/_client","name":"_client"},"ref":{"refId":"http_standalone/HttpClient","name":"HttpClient"},"id":"_client","name":"_client","isPrivate":true,"kind":"param"},{"ref":{"refId":"dart.core/String","name":"String"},"id":"method","name":"method","kind":"param"},{"ref":{"refId":"dart.core/Uri","name":"Uri"},"id":"uri","name":"uri","kind":"param"},{"initializedField":{"refId":"http_standalone/Request/multipart","name":"multipart"},"isNamed":true,"ref":{"refId":"dart.core/bool","name":"bool"},"isOptional":true,"defaultValue":"false","id":"multipart","name":"multipart","kind":"param"}],"line":"29","kind":"constructor"}],"line":"24","kind":"class"},{"interfaces":[{"refId":"http_client/RequestHeaders","name":"RequestHeaders"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Headers","name":"Headers","children":[{"id":"set2()","name":"set","children":[{"id":"name","name":"name","kind":"param"},{"id":"value","name":"value","kind":"param"}],"line":"20","kind":"method"},{"ref":{"refId":"base_request/BaseRequest","name":"BaseRequest"},"id":"_request","name":"_request","isPrivate":true,"line":"18","kind":"variable"},{"id":"1()","name":"","children":[{"initializedField":{"refId":"http_standalone/Headers/_request","name":"_request"},"ref":{"refId":"base_request/BaseRequest","name":"BaseRequest"},"id":"_request","name":"_request","isPrivate":true,"kind":"param"}],"line":"19","kind":"constructor"}],"line":"17","kind":"class"},{"interfaces":[{"refId":"http_client/Response","name":"Response"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"id":"Response","name":"Response","children":[{"id":"body","name":"body","line":"13","kind":"property"},{"ref":{"refId":"response/Response","name":"Response"},"id":"_response","name":"_response","isPrivate":true,"line":"9","kind":"variable"},{"id":"1()","name":"","children":[{"initializedField":{"refId":"http_standalone/Response/_response","name":"_response"},"ref":{"refId":"response/Response","name":"Response"},"id":"_response","name":"_response","isPrivate":true,"kind":"param"}],"line":"11","kind":"constructor"}],"line":"8","kind":"class"}],"line":"1","kind":"library"}